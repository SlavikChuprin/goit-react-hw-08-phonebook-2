{"version":3,"file":"static/js/684.5425f90e.chunk.js","mappings":"4PAKMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIH,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,YAC5BC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUV,EAAoB,EAApBA,KAAMW,EAAc,EAAdA,MACtC,OAAQX,GACN,IAAK,OACH,OAAOC,EAAQU,GACjB,IAAK,QACH,OAAOR,EAASQ,GAClB,IAAK,WACH,OAAON,EAAYM,GACrB,QACE,SAYN,OACE,4BACE,8CACCL,GACC,SAAC,IAAD,CAAQM,KAAK,UAAUC,MAAM,eAE7B,kBAAMC,SAdS,SAAAC,GACnBA,EAAEC,iBACFnB,EAASoB,EAAAA,GAAAA,SAAwB,CAAEjB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KASsBa,MAAO7B,EAAOC,KAAM6B,aAAa,MAA/D,WACE,mBAAOD,MAAO7B,EAAOG,MAArB,gCAEE,kBACEoB,KAAK,OACLZ,KAAK,OACLW,MAAOX,EACPoB,WAAS,EACTD,aAAa,KACbE,YAAY,gEACZC,UAAQ,EACRC,SAAUd,QAId,mBAAOS,MAAO7B,EAAOG,MAArB,4CAEE,kBACEoB,KAAK,QACLZ,KAAK,QACLsB,UAAQ,EACRD,YAAY,qGACZG,QAAQ,qBACRb,MAAOT,EACPqB,SAAUd,EACVU,aAAa,WAIjB,mBAAOD,MAAO7B,EAAOG,MAArB,kDAEE,kBACEoB,KAAK,WACLZ,KAAK,WACLW,MAAOP,EACPkB,UAAQ,EACRD,YAAY,kKACZG,QAAQ,qBACRC,MAAM,sOACNF,SAAUd,QAId,mBAAQG,KAAK,SAAb,kI,iECxFK,SAASc,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,IAAIG,EAAY,MAAPJ,EAAc,KAAyB,qBAAXK,QAA0BL,EAAIK,OAAOC,WAAaN,EAAI,cAE3F,GAAU,MAANI,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKZ,KAAQU,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAGvB,QAETiB,GAAKQ,EAAKO,SAAWf,GAH4BS,GAAK,IAK5D,MAAOO,GACPN,GAAK,EACLH,EAAKS,EACL,QACA,IACOP,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,GFtBuB,CAAqBT,EAAKC,KAAM,EAAAiB,EAAA,GAA2BlB,EAAKC,IGLjF,WACb,MAAM,IAAIkB,UAAU,6IHIgF","sources":["views/RegisterView.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authOperations, authSelectors } from '../redux/auth';\nimport Loader from 'react-loader-spinner';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isLoadingData = useSelector(authSelectors.getLoading);\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>REGISTRATION PAGE</h1>\n      {isLoadingData ? (\n        <Loader type=\"Circles\" color=\"lightblue\" />\n      ) : (\n        <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n          <label style={styles.label}>\n            Имя\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              autoFocus\n              autoComplete=\"on\"\n              placeholder=\"введите имя\"\n              required\n              onChange={handleChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Почта\n            <input\n              type=\"email\"\n              name=\"email\"\n              required\n              placeholder=\"введите вашу почту\"\n              pattern=\"\\S+@[a-z]+.[a-z]+\"\n              value={email}\n              onChange={handleChange}\n              autoComplete=\"on\"\n            />\n          </label>\n\n          <label style={styles.label}>\n            Пароль\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              required\n              placeholder=\"введите пароль от 7 до 12 символов\"\n              pattern=\"[A-Za-z0-9_]{7,12}\"\n              title=\"пароль состоит минимум из 7 знаков, максимум 12\"\n              onChange={handleChange}\n            />\n          </label>\n\n          <button type=\"submit\">Зарегистрироваться</button>\n        </form>\n      )}\n    </div>\n  );\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["styles","form","width","label","display","flexDirection","marginBottom","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","isLoadingData","useSelector","authSelectors","handleChange","target","value","type","color","onSubmit","e","preventDefault","authOperations","style","autoComplete","autoFocus","placeholder","required","onChange","pattern","title","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}